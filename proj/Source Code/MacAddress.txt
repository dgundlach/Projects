From joe@USE.NET Fri Jan 28 02:17:19 2005
From: Average Joe <joe@USE.NET>
User-Agent: Mozilla Thunderbird 0.9 (X11/20041127)
X-Accept-Language: en-us, en
MIME-Version: 1.0
Newsgroups: comp.unix.programmer
Subject: Re: How to read the MAC Address out of /proc or /sys
References: <99fef2dc.0501231002.43c38449@posting.google.com>
In-Reply-To: <99fef2dc.0501231002.43c38449@posting.google.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Lines: 58
Message-ID: <7ymKd.9426$rv.7928@fed1read03>
Date: Fri, 28 Jan 2005 01:17:19 -0700
NNTP-Posting-Host: 68.2.71.47
X-Complaints-To: abuse@cox.net
X-Trace: fed1read03 1106900227 68.2.71.47 (Fri, 28 Jan 2005 03:17:07 EST)
NNTP-Posting-Date: Fri, 28 Jan 2005 03:17:07 EST
Organization: Cox Communications
Path: newsfeed.slurp.net!newsfeed-0.progon.net!progon.net!newsfeed00.sul.t-online.de!newsfeed01.sul.t-online.de!t-online.de!newsfeed.stueberl.de!peer01.cox.net!cox.net!p01!fed1read03.POSTED!53ab2750!not-for-mail
Xref: newsfeed.slurp.net comp.unix.programmer:24252

Niko Schwarz wrote:
> Hello,
> 
> I'm writing a little obstacle for users to mass-copy programs my 
> university wrote. It works fine already, I do it through the MAC
> address, which I read from /sbin/ifconfig.


This isn't through /proc, but it's just another way to do it without:


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/ioctl.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <net/if.h>
#include <arpa/inet.h>

int main(void)
{
   int                sfd;
   unsigned char      *u;
   struct ifreq       ifr;
   struct sockaddr_in *sin = (struct sockaddr_in *) &ifr.ifr_addr;

   memset(&ifr, 0, sizeof ifr);

   if (0 > (sfd = socket(AF_INET, SOCK_STREAM, 0))) {
     perror("socket()");
     exit(EXIT_FAILURE);
   }

   strcpy(ifr.ifr_name, "eth0");
   sin->sin_family = AF_INET;

   if (0 == ioctl(sfd, SIOCGIFADDR, &ifr)) {
     printf("%s: %s\n", ifr.ifr_name, inet_ntoa(sin->sin_addr));
   }


   if (0 > ioctl(sfd, SIOCGIFHWADDR, &ifr)) {
     return EXIT_FAILURE;
   }

   u = (unsigned char *) &ifr.ifr_addr.sa_data;

   if (u[0] + u[1] + u[2] + u[3] + u[4] + u[5]) {
     printf("HW Address: %2.2x:%2.2x:%2.2x:%2.2x:%2.2x:%2.2x\n",
            u[0], u[1], u[2], u[3], u[4], u[5]);
   }

   return EXIT_SUCCESS;
}

--
Average Joe

